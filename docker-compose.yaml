services:
  api:
    build: .
    networks:
      - mynetwork
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - DB_USER=${DATABASE_USER}
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - DB_NAME=${DATABASE_NAME}
      - DB_HOST=database
      - THE_MOVIE_DATABASE_API_KEY=${THE_MOVIE_DATABASE_API_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT_TLS=587
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  database:
    image: postgres:15-alpine
    networks:
      - mynetwork
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: